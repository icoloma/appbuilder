/*

    Para lanzar en Jetty, ejecutar gradle jettyRun -Dspring.profiles.active=dev

 */

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'jetty'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply from: 'cobertura.gradle'

sourceCompatibility = 7
version = '1.0-SNAPSHOT'
group="info.spain"

 
def springVersion = '3.2.4.RELEASE'   
def springDataMongoDBVersion = '1.2.1.RELEASE'
def springHateoasVersion = '0.8.0.RELEASE'
def springSecurityVersion='3.2.0.RC1'
def thymeleafVersion = '2.0.16'
def thymeleafSpringSecurityVersion ='2.0.1'
def mongoJavaDriverVersion = '2.11.1'
 

jar {
    manifest {
        attributes 'Implementation-Title': 'Open Catalog', 'Implementation-Version': version
    }
}


repositories {
    mavenCentral()
    maven { url 'http://repo.spring.io/libs-milestone' }  // spring-milestones 
    ivy { url 'http://repo.spring.io/libs-snapshot' } // spring-snapshots
}




dependencies {
	providedCompile 'javax.servlet:servlet-api:2.5',
					'javax.servlet.jsp:jsp-api:2.1',
					'org.apache.tomcat:dbcp:6.0.37'
	
    compile "com.github.mxab.thymeleaf.extras:thymeleaf-extras-data-attribute:1.1",
			"com.google.guava:guava:12.0",
     		"com.fasterxml.jackson.core:jackson-databind:2.1.2",
			"commons-collections:commons-collections:3.2",
            "commons-fileupload:commons-fileupload:1.3",
			"javax.servlet:jstl:1.2",
			"javax.validation:validation-api:1.0.0.GA",
            "joda-time:joda-time:2.2",
     		"log4j:log4j:1.2.14",
			"org.apache.commons:commons-compress:1.5",
			"org.hibernate:hibernate-validator:4.1.0.Final",
            "org.mongodb:mongo-java-driver:${mongoJavaDriverVersion}",
     		"org.springframework:spring-context:${springVersion}",
     		"org.springframework:spring-jdbc:${springVersion}",
     		"org.springframework:spring-webmvc:${springVersion}",
     		"org.springframework.data:spring-data-mongodb:${springDataMongoDBVersion}",
     		"org.springframework.hateoas:spring-hateoas:${springHateoasVersion}",
			"org.springframework.security:spring-security-config:${springSecurityVersion}",
			"org.springframework.security:spring-security-web:${springSecurityVersion}",
     		"org.slf4j:slf4j-log4j12:1.7.5",
			"org.thymeleaf:thymeleaf:${thymeleafVersion}",
			"org.thymeleaf:thymeleaf-spring3:${thymeleafVersion}",
			"org.thymeleaf.extras:thymeleaf-extras-springsecurity3:${thymeleafSpringSecurityVersion}",
            "org.xerial:sqlite-jdbc:3.7.2",
            "org.json:json:20090211"	
	
     		
     		
    testCompile "junit:junit:4.7",
    			"org.springframework:spring-test:${springVersion}",
    			"org.seleniumhq.selenium:selenium-java:2.35.0",
    			"com.jayway.jsonpath:json-path:0.8.1"

}

test {
    exclude 'integrationTests/**'
}


task wrapper(type: Wrapper) {
    gradleVersion = '1.8'
}


task integrationTest(type: Test, dependsOn: "testClasses")  {

	/*  
	*   Por defecto toma el profile "dev", para especificar otro profile hay que pasarlo como par√°metro ej.: 
	*   $ gradle integrationTest -PspringProfile=test 
	*/
	def env = project.hasProperty('springProfiles') ? project.springProfiles : 'dev'
	systemProperties['spring.profiles.active'] = env;
	println "spring.profile.active= " + env
 	include 'integrationTests/**'
 	
 	integrationTest.getReports().getJunitXml().setDestination(file("$buildDir/integrationTests-test-results"))
 	
    
}


findbugs {
  ignoreFailures = true
}

checkstyle {
  ignoreFailures = true
}




